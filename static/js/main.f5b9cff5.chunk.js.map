{"version":3,"sources":["routes/api.js","routes/fetchHook.js","components/SearchVideoBar/SearchVideoBar.jsx","components/VideoDetails/VideoDetails.jsx","components/VideoItem/VideoItem.jsx","components/VideoList/VideoList.jsx","components/App.js","index.js"],"names":["axios","create","baseURL","useFetch","initialURL","params","defaultResponse","_useState","useState","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","url","setUrl","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isError","setIsError","useEffect","api","get","part","type","maxResults","key","process","catch","error","response","Error","concat","JSON","stringify","message","request","then","items","SearchVideoBar","_ref","handleFormSubmit","handleChange","videoName","react_default","a","createElement","Form","className","onSubmit","Control","name","placeholder","onChange","value","variant","VideoDetails","selectedVideo","VIDEO_URL","id","videoId","_selectedVideo$snippe","snippet","title","channelTitle","description","publishedAt","videoCreatedDate","Date","month","toLocaleString","style","width","height","ResponsiveEmbed","aspect","maxHeight","src","Card","Body","includes","replace","getDate","getFullYear","VideoItem","video","handleVideoOnClick","_video$snippet","thumbnails","IMG_URL","medium","Media","onClick","alt","VideoList","videos","videosList","map","components_VideoItem_VideoItem","etag","react","fontSize","App","setVideoName","setSelectedVideo","_useFetch","_useFetch2","Container","SearchVideoBar_SearchVideoBar_SearchVideoBar","e","target","preventDefault","trim","length","VideoDetails_VideoDetails","VideoList_VideoList","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5b9cff5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://www.googleapis.com/youtube/v3';\r\n\r\nexport default axios.create({baseURL: URL});","import {useState, useEffect} from 'react';\r\nimport api from './api';\r\nconst YT_API_KEY = process.env.REACT_APP_YT_API_KEY;\r\n\r\nconst useFetch = (initialURL, params) => {\r\n    const {defaultResponse} = params;\r\n    const [data,\r\n        setData] = useState(defaultResponse);\r\n    const [url,\r\n        setUrl] = useState(initialURL);\r\n    const [isLoading,\r\n        setIsLoading] = useState(false);\r\n    const [isError,\r\n        setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const doFetch = () => {\r\n            setIsError(false);\r\n            setIsLoading(true);\r\n            setUrl(url);\r\n\r\n            api\r\n                .get(url, {\r\n                params: {\r\n                    part: 'snippet',\r\n                    type: 'video',\r\n                    maxResults: 5,\r\n                    key: YT_API_KEY\r\n                }\r\n            })\r\n                .catch(error => {\r\n                    setIsError(true);\r\n                    if (error.response) {\r\n                        throw new Error(`Error: ${JSON.stringify(error.message)}`);\r\n                    } else if (error.request) {\r\n                        throw new Error(`Error: No response from the server`);\r\n                    } else {\r\n                        throw new Error('Error', error.message);\r\n                    }\r\n                })\r\n                .then(response => {\r\n                    setData(response.data.items)\r\n                    setIsLoading(false);\r\n                });\r\n        }\r\n\r\n        doFetch();\r\n    }, [url]);\r\n\r\n    return [data, isLoading, isError, setUrl];\r\n}\r\n\r\nexport default useFetch;","import React from 'react';\r\nimport './SearchVideoBar.css';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nexport const SearchVideoBar = ({handleFormSubmit, handleChange, videoName}) => {\r\n    return (\r\n        <Form className=\"video-form\" onSubmit={handleFormSubmit}>\r\n            <Form.Control\r\n                name=\"video\"\r\n                placeholder=\"Type a youtube video name...\"\r\n                className=\"form-control video-form__input mt-4\"\r\n                onChange={handleChange}\r\n                value={videoName}/>\r\n            <button type=\"submit\" className=\"video-form__btn\" variant=\"primary\">Search</button>\r\n        </Form>\r\n    )\r\n}","import React from 'react';\r\nimport {ResponsiveEmbed, Card} from 'react-bootstrap';\r\n\r\nexport const VideoDetails = ({selectedVideo}) => {\r\n    if (!selectedVideo) \r\n        return null;\r\n    const VIDEO_URL = `https://www.youtube.com/embed/${selectedVideo.id.videoId}`;\r\n    const {title, channelTitle, description, publishedAt} = selectedVideo.snippet;\r\n    const videoCreatedDate = new Date(publishedAt);\r\n    const month = videoCreatedDate.toLocaleString('en-us', {month: 'long'});\r\n\r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            height: '300'\r\n        }}>\r\n            <ResponsiveEmbed\r\n                aspect=\"a16by9\"\r\n                style={{\r\n                maxHeight: 400\r\n            }}>\r\n                <embed type=\"video/webm\" src={VIDEO_URL}/>\r\n            </ResponsiveEmbed>\r\n            <Card className=\"mt-3\">\r\n                <Card.Body>\r\n                    <h2 className=\"video__heading\">{title.includes('&amp')\r\n                            ? title.replace('&amp;', '&')\r\n                            : title}\r\n                    </h2>\r\n                    <p className=\"video__author\">{channelTitle}</p>\r\n                    <p className=\"date\">{`Published at\r\n                ${month}\r\n                ${videoCreatedDate.getDate()}\r\n                ${videoCreatedDate.getFullYear()}`}</p>\r\n                    <div className=\"description\">\r\n                        {description}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './VideoItem.css';\r\nimport {Media} from 'react-bootstrap';\r\n\r\nconst VideoItem = ({video, handleVideoOnClick}) => {\r\n    const {thumbnails, title, channelTitle} = video.snippet;\r\n    const IMG_URL = thumbnails.medium.url;\r\n\r\n    return (\r\n        <Media\r\n            onClick={() => handleVideoOnClick(video)}\r\n            className=\"mt-3 mb-3 video-item\">\r\n            <img className=\"mr-3 video-item__img\" src={IMG_URL} alt=\"Generic placeholder\"/>\r\n            <Media.Body className=\"align-self-center\">\r\n                <h3 className=\"video__heading\">{title.includes('&amp')\r\n                        ? title.replace('&amp;', '&')\r\n                        : title}</h3>\r\n                <p>{channelTitle}</p>\r\n            </Media.Body>\r\n        </Media>\r\n    )\r\n}\r\n\r\nexport default VideoItem;","import React, {Fragment} from 'react';\r\nimport VideoItem from '../VideoItem/VideoItem';\r\n\r\nexport const VideoList = ({videos, handleVideoOnClick}) => {\r\n    const videosList = videos.map(video => (<VideoItem\r\n        handleVideoOnClick={handleVideoOnClick}\r\n        key={video.etag}\r\n        video={video}/>));\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <p style={{\r\n                    fontSize: '1rem'\r\n                }}>Next</p>\r\n                {videosList}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport './App.css';\r\nimport useFetch from '../routes/fetchHook';\r\nimport {SearchVideoBar} from './SearchVideoBar/SearchVideoBar';\r\nimport {VideoDetails} from './VideoDetails/VideoDetails';\r\nimport {VideoList} from './VideoList/VideoList';\r\n\r\nconst App = () => {\r\n    const [videoName,\r\n        setVideoName] = useState('Marvel');\r\n    const [selectedVideo,\r\n        setSelectedVideo] = useState('');\r\n\r\n    const [data,\r\n        isLoading,\r\n        isError,\r\n        setUrl] = useFetch(`/search/?q=${videoName}`, {defaultResponse: []});\r\n\r\n    const handleVideoOnClick = (video) => {\r\n        setSelectedVideo(video);\r\n    }\r\n\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!videoName.trim().length) \r\n            return;\r\n        setUrl(`/search/?q=${videoName}`);\r\n        setVideoName('');\r\n\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {value} = e.target;\r\n        setVideoName(value);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <SearchVideoBar\r\n                handleChange={handleChange}\r\n                handleFormSubmit={handleFormSubmit}\r\n                videoName={videoName}/> {isLoading\r\n                ? <div className=\"spinner\"></div>\r\n                : <div className=\"row mt-5\">\r\n                    <div className=\"col-12 col-lg-8\">\r\n                        <VideoDetails selectedVideo={selectedVideo}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <VideoList handleVideoOnClick={handleVideoOnClick} videos={data}/>\r\n                    </div>\r\n                </div>\r\n}\r\n            {isError && <div className=\"error\">API Error: Fetch videos request failed.</div>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../src/components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}